function testsensors
% testsensors.m
%
% Open all SNOTEL data files in a directory (hourly or daily), creates
% plots of each sensor timeseries, and waits for user input. User input is 
% appended to a file (excludesensors.txt) that can be used by other
% scripts to remove bad sensor data during data analysis.
%
%  * Input: all SNOTEL .csv files in a directory
%  * Output: Sensor timeseries plots, and an excludesensors.txt file
%
% 9-20-2012, Greg Maurer
% ------------------------------------------------------------------------
interval = input('Hourly or daily files? ', 's');
type = 'sigma';  % type of filter to use
thresh = 2.5; % filtering threshold

fignum = 0;
% Load a list of daily files (all sensors) or hourly soil sensor data
if strcmpi(interval, 'daily')
    datapath = '../rawdata/allsensors_daily/';
    addcols = 13;
    colheaders = ['site_id, year, wteq, prec, snwd, tobs, tmax, tmin, ' ...
        'tavg, ts5, ts20, ts50, vwc5, vwc20, vwc50'];
elseif strcmpi(interval, 'hourly')
    datapath = '../rawdata/soilsensors_hourly/';
    addcols = 6;
    colheaders = 'site_id, year, ts5, ts20, ts50, vwc5, vwc20, vwc50';
end

% Create a list of files in the datapath
filelist = sortrows(csvread([datapath 'filelist.txt']));

% If there is no excludesensors.txt file, it should be created. If it
% exists, files that have already been checked should be subtracted
% from the total in filelist.
try
    % Load the sites that have been checked from excludesensor.txt
    checked = csvread([datapath 'excludesensors.txt'], 2, 0);
    % Mark checked sites in filelist and remove them
    notchecked = ~ismember(filelist, checked(:,1:2), 'rows');
    filelist = filelist(notchecked, 1:end);
catch exception
    disp(['File: excludesensors.txt not found. '...
        'A new file will be created']);
    headertext = {['Generated by testsensors.m script on ' date]; ...
        colheaders};
    dlmwrite([datapath 'excludesensors.txt'], char(headertext), ...
        'delimiter', '');
end

% Add columns that can be used to exclude sensors
checklist = [filelist, zeros(length(filelist), addcols)];

% Loop through each file in the checklist, plot the sensor data, and then
% ask the user to mark sensorsthat should be excluded. A matrix of excluded
% sensors is written to the datapath.
for i = 1:length(checklist)
    siteID = checklist(i,1);
    year = checklist(i,2);
    m = loadsnotel_oneyear(siteID, year, interval);
    
    if strcmpi(interval, 'hourly')
        disp(['Hourly data, site = ' num2str(siteID) ...
            ', year = ' num2str(year)]);
        % Create plots to check data
        plothourly();
        % Add bad sensors to exclude matrix
        badsensors = [badts badvwc];
        checklist(i,3:end) = badsensors;
        
    elseif strcmpi(interval, 'daily')
        disp(['Daily data, site = ' num2str(siteID) ...
            ', year = ' num2str(year)]);
        % Create plots to check data
        plotdaily();
        % Add bad sensors to exclude matrix
        badsensors = [badprec badairt badts badvwc];
        checklist(i,3:end) = badsensors;
    end
    disp('Writing to file');
    dlmwrite([datapath 'excludesensors.txt'], checklist(i, :), '-append');
    disp('OK!');
end

% Plot HOURLY sensors
    function plothourly()
        decday_h = datenum(strcat(m{2}, m{3}), 'yyyy-mm-ddHH:MM');
        ts5 = m{7}; % column 7 is at -2 in (5cm depth)
        ts20 = m{8}; % column 8 is at -8 in (20cm depth)
        ts50 = m{9}; % column 9 is at -20 in (50cm depth)
        vwc5 = m{4}; % column 4 is at -2 in (5cm depth)
        vwc20 = m{5}; % column 5 is at -8 in (20cm depth)
        vwc50 = m{6}; % column 6 is at -20 in (50cm depth)
        ts5F = filterseries(m{7}, type, thresh);
        ts20F = filterseries(m{8}, type, thresh);
        ts50F = filterseries(m{9}, type, thresh);
        vwc5F = filterseries(m{4}, type, thresh);
        vwc20F = filterseries(m{5}, type, thresh);
        vwc50F = filterseries(m{6}, type, thresh);
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = -15;
        ymax = 50;
        set(h, 'Name', ['Ts at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(3, 1, 1)
        plot(decday_h, ts5, '.r', decday_h, ts5F, '.k');
        title('1) Ts -5cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 2)
        plot(decday_h, ts20, '.r', decday_h, ts20F, '.k');
        title('2) Ts -20cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 3)
        plot(decday_h, ts50, '.r', decday_h, ts50F, '.k');
        title('3) Ts -50cm'); datetick(); ylim([ymin, ymax]);
        tsinput = input('Bad Tsoil sensors?  [1, 2, or 3]: ');
        badts = zeros(1, 3);
        badts(tsinput) = 1;
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = -5;
        ymax = 45;
        set(h, 'Name', ['VWC at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(3, 1, 1)
        plot(decday_h, vwc5, '.r', decday_h, vwc5F, '.k');
        title('1) VWC -5cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 2)
        plot(decday_h, vwc20, '.r', decday_h, vwc20F, '.k');
        title('2) VWC -20cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 3)
        plot(decday_h, vwc50, '.r', decday_h, vwc50F, '.k');
        title('3) VWC -50cm'); datetick(); ylim([ymin, ymax]);
        vwcinput = input('Bad VWC sensors?  [1, 2, or 3]: ');
        badvwc = zeros(1, 3);
        badvwc(vwcinput) = 1;
        close all;
        
    end

% Plot DAILY sensors
    function plotdaily()
        decday_d = datenum(m{2});
        wteq = m{4}; % water equivalent
        prec = m{5}; % precip
        snwd = m{10}; % snow depth
        tobs = m{6}; % Air T
        tmax = m{7}; % Max AirT
        tmin = m{8}; % Min AirT
        tavg = m{9}; % Avg AirT
        vwc5 = m{11}; % 5cm VWC
        vwc20 = m{12}; % 20cm VWC
        vwc50 = m{13}; % 50cm VWC
        ts5 = m{14}; % 5cm Ts
        ts20 = m{15}; % 20cm Ts
        ts50 = m{16}; % 50cm Ts
        % Filtered
        wteqF = filterseries(m{4}, type, thresh);
        precF = filterseries(m{5}, type, thresh);
        snwdF = filterseries(m{10}, type, thresh);
        tobsF = filterseries(m{6}, type, thresh);
        tmaxF = filterseries(m{7}, type, thresh);
        tminF = filterseries(m{8}, type, thresh);
        tavgF = filterseries(m{9}, type, thresh);
        vwc5F = filterseries(m{11}, type, thresh);
        vwc20F = filterseries(m{12}, type, thresh);
        vwc50F = filterseries(m{13}, type, thresh);
        ts5F = filterseries(m{14}, type, thresh);
        ts20F = filterseries(m{15}, type, thresh);
        ts50F = filterseries(m{16}, type, thresh);
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = 0;
        ymax = 80;
        set(h, 'Name', ['Precip at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(3, 1, 1)
        plot(decday_d, wteq, '.r', decday_d, wteqF, '.k');
        title('1) SWE (snow pillow)'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 2)
        plot(decday_d, prec, '.r', decday_d, precF, '.k');
        title('2) Precip gauge'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 3)
        plot(decday_d, snwd, '.r', decday_d, snwdF, '.k');
        title('3) Snow Depth'); datetick(); ylim([ymin, 150]);
        precinput = input('Bad precip sensors?  [1, 2, or 3]: ');
        badprec = zeros(1, 3);
        badprec(precinput) = 1;
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = -25;
        ymax = 50;
        set(h, 'Name', ['AirT at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(4, 1, 1)
        plot(decday_d, tobs, '.r', decday_d, tobsF, '.k');
        title('1) Air T obs'); datetick(); ylim([ymin, ymax]);
        subplot(4, 1, 2)
        plot(decday_d, tmax, '.r', decday_d, tmaxF, '.k');
        title('2) MAX Air T'); datetick(); ylim([ymin, ymax]);
        subplot(4, 1, 3)
        plot(decday_d, tmin, '.r', decday_d, tminF, '.k');
        title('3) MIN Air T'); datetick(); ylim([ymin, ymax]);
        subplot(4, 1, 4)
        plot(decday_d, tavg, '.r', decday_d, tavgF, '.k');
        title('4) AVG Air T'); datetick(); ylim([ymin, ymax]);
        airtinput = input('Bad air T sensors?  [1, 2, 3, or 4]: ');
        badairt = zeros(1, 4);
        badairt(airtinput) = 1;
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = -15;
        ymax = 50;
        set(h, 'Name', ['Ts at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(3, 1, 1)
        plot(decday_d, ts5, '.r', decday_d, ts5F, '.k');
        title('1) Ts -5cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 2)
        plot(decday_d, ts20, '.r', decday_d, ts20F, '.k');
        title('2) Ts -20cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 3)
        plot(decday_d, ts50, '.r', decday_d, ts50F, '.k');
        title('3) Ts -50cm'); datetick(); ylim([ymin, ymax]);
        tsinput = input('Bad Tsoil sensors?  [1, 2, or 3]: ');
        badts = zeros(1, 3);
        badts(tsinput) = 1;
        
        fignum = fignum+1;
        h = figure(fignum);
        ymin = -5;
        ymax = 45;
        set(h, 'Name', ['VWC at site ' num2str(siteID) ' - ' num2str(year)]);
        subplot(3, 1, 1)
        plot(decday_d, vwc5, '.r', decday_d, vwc5F, '.k');
        title('1) VWC -5cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 2)
        plot(decday_d, vwc20, '.r', decday_d, vwc20F, '.k');
        title('2) VWC -20cm'); datetick(); ylim([ymin, ymax]);
        subplot(3, 1, 3)
        plot(decday_d, vwc50, '.r', decday_d, vwc50F, '.k');
        title('3) VWC -50cm'); datetick(); ylim([ymin, ymax]);
        vwcinput = input('Bad VWC sensors?  [1, 2, or 3]: ');
        badvwc = zeros(1, 3);
        badvwc(vwcinput) = 1;
        close all;
    end
end
